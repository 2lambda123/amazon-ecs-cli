// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-cli/ecs-cli/modules/clients/aws/secretsmanager (interfaces: SMClient)

package mock_secretsmanager

import (
	secretsmanager "github.com/aws/aws-sdk-go/service/secretsmanager"
	gomock "github.com/golang/mock/gomock"
)

// Mock of SMClient interface
type MockSMClient struct {
	ctrl     *gomock.Controller
	recorder *_MockSMClientRecorder
}

// Recorder for MockSMClient (not exported)
type _MockSMClientRecorder struct {
	mock *MockSMClient
}

func NewMockSMClient(ctrl *gomock.Controller) *MockSMClient {
	mock := &MockSMClient{ctrl: ctrl}
	mock.recorder = &_MockSMClientRecorder{mock}
	return mock
}

func (_m *MockSMClient) EXPECT() *_MockSMClientRecorder {
	return _m.recorder
}

func (_m *MockSMClient) CreateSecret(_param0 secretsmanager.CreateSecretInput) (*secretsmanager.CreateSecretOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateSecret", _param0)
	ret0, _ := ret[0].(*secretsmanager.CreateSecretOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSMClientRecorder) CreateSecret(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateSecret", arg0)
}

func (_m *MockSMClient) ListSecrets(_param0 *string) (*secretsmanager.ListSecretsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListSecrets", _param0)
	ret0, _ := ret[0].(*secretsmanager.ListSecretsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSMClientRecorder) ListSecrets(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListSecrets", arg0)
}
